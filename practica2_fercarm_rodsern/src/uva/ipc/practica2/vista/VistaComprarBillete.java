package uva.ipc.practica2.vista;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import static java.lang.Double.parseDouble;
import java.text.SimpleDateFormat;
import java.time.DayOfWeek;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.Timer;

/**
 * Clase para la interfaz gráfica de la vista de comprar billete
 * @author Fernando Carmona
 * @author Rodrigo Serna
 */
public class VistaComprarBillete extends javax.swing.JFrame {
    private final ControladorComprarBillete miControlador;
    
    /**
     * Cronómetro para comprobar el pago con tarjeta de crédito
     */
    private Timer timer_tarjeta_credito = new Timer(2000, new ActionListener(){
        public void actionPerformed(ActionEvent e){
            miControlador.tarjetaCreditoPasada();
        }
    });
    
    /**
     * Cronómetro para comprobar el pago con la tarjeta de usuario TCyL
     */
    private Timer timer_tarjeta_renfe = new Timer(2000, new ActionListener(){
        public void actionPerformed(ActionEvent e){
            miControlador.procesarTimerRenfeActionPerformed();
        }
    });
    
    /**
     * Crea la nueva vista del menú principal en el estado inicial (mostrando solo el primer paso)
     */
    public VistaComprarBillete() {
        initComponents();
        lista_rutas_posibles.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION); //Poner en modo de selección único
        miControlador = new ControladorComprarBillete(this);
        cargarEstaciones();
        setVisible(1,0,0);
        setNoVisible(0,1,1);
        pago_correcto.setLocationRelativeTo(null);
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pago_correcto = new javax.swing.JDialog();
        lb_pago_aceptado = new javax.swing.JLabel();
        btn_billete = new javax.swing.JButton();
        btn_salir = new javax.swing.JButton();
        info1 = new javax.swing.JPanel();
        titulo1 = new javax.swing.JLabel();
        subtitulo1 = new javax.swing.JLabel();
        btnSig1 = new javax.swing.JButton();
        elegirOrigen = new javax.swing.JComboBox<>();
        elegirDestino = new javax.swing.JComboBox<>();
        btnIntercambio = new javax.swing.JButton();
        calendario = new com.toedter.calendar.JDateChooser();
        lbError1 = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        info2 = new javax.swing.JPanel();
        titulo2 = new javax.swing.JLabel();
        subtitulo2 = new javax.swing.JLabel();
        btnSig2 = new javax.swing.JButton();
        btnAnt2 = new javax.swing.JButton();
        ckeckBoxBici = new javax.swing.JCheckBox();
        checkBoxSilla = new javax.swing.JCheckBox();
        checkBoxMascota = new javax.swing.JCheckBox();
        lbEquipaje = new javax.swing.JLabel();
        lbBicicleta = new javax.swing.JLabel();
        lbMascota = new javax.swing.JLabel();
        lbSilla = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lista_rutas_posibles = new javax.swing.JList<>();
        lbError2 = new javax.swing.JLabel();
        info3 = new javax.swing.JPanel();
        titulo3 = new javax.swing.JLabel();
        subtitulo3 = new javax.swing.JLabel();
        btnAnt3 = new javax.swing.JButton();
        radioBtnCredito = new javax.swing.JRadioButton();
        radioBtnRenfe = new javax.swing.JRadioButton();
        lbTarjetaCredito = new javax.swing.JLabel();
        lbTarjetaRenfe = new javax.swing.JLabel();
        lbInfoTarjeta1 = new javax.swing.JLabel();
        pin = new javax.swing.JPasswordField();
        btnPIN = new javax.swing.JButton();
        lbInfoTarjeta2 = new javax.swing.JLabel();
        lbPIN = new javax.swing.JLabel();
        lbError3 = new javax.swing.JLabel();

        pago_correcto.setTitle("PAGO CORRECTO");
        pago_correcto.setAlwaysOnTop(true);
        pago_correcto.setLocation(new java.awt.Point(200, 200));
        pago_correcto.setPreferredSize(new java.awt.Dimension(400, 300));
        pago_correcto.setSize(new java.awt.Dimension(400, 300));

        lb_pago_aceptado.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        lb_pago_aceptado.setForeground(new java.awt.Color(0, 153, 0));
        lb_pago_aceptado.setText("EL PAGO HA SIDO PROCESADO CON ÉXITO");

        btn_billete.setText("COMPRAR OTRO BILLETE");
        btn_billete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_billete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_billeteActionPerformed(evt);
            }
        });

        btn_salir.setText("VOLVER AL MENÚ");
        btn_salir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pago_correctoLayout = new javax.swing.GroupLayout(pago_correcto.getContentPane());
        pago_correcto.getContentPane().setLayout(pago_correctoLayout);
        pago_correctoLayout.setHorizontalGroup(
            pago_correctoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pago_correctoLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(pago_correctoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pago_correctoLayout.createSequentialGroup()
                        .addComponent(btn_billete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_salir))
                    .addComponent(lb_pago_aceptado, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        pago_correctoLayout.setVerticalGroup(
            pago_correctoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pago_correctoLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lb_pago_aceptado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addGroup(pago_correctoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btn_salir)
                    .addComponent(btn_billete))
                .addGap(36, 36, 36))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tren Castilla y León");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(0, 0));
        setName("app_trenes"); // NOI18N
        setSize(new java.awt.Dimension(1500, 750));
        getContentPane().setLayout(new java.awt.GridLayout(1, 3));

        info1.setBackground(new java.awt.Color(233, 255, 255));
        info1.setPreferredSize(new java.awt.Dimension(500, 750));

        titulo1.setFont(new java.awt.Font("Stencil", 1, 48)); // NOI18N
        titulo1.setForeground(new java.awt.Color(94, 145, 136));
        titulo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo1.setText("PASO 1");
        titulo1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        subtitulo1.setFont(new java.awt.Font("Stencil", 1, 18)); // NOI18N
        subtitulo1.setForeground(new java.awt.Color(94, 145, 136));
        subtitulo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        subtitulo1.setText("ESTACIONES Y FECHAS");
        subtitulo1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        btnSig1.setBackground(new java.awt.Color(94, 145, 136));
        btnSig1.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        btnSig1.setForeground(new java.awt.Color(255, 255, 255));
        btnSig1.setText("SIGUIENTE >");
        btnSig1.setToolTipText("Siguiente paso");
        btnSig1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSig1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSig1ActionPerformed(evt);
            }
        });

        elegirOrigen.setBackground(new java.awt.Color(207, 246, 248));
        elegirOrigen.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        elegirOrigen.setMaximumRowCount(18);
        elegirOrigen.setToolTipText("Estación origen");
        elegirOrigen.setAutoscrolls(true);
        elegirOrigen.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        elegirOrigen.setFocusable(false);
        elegirOrigen.setName(""); // NOI18N

        elegirDestino.setBackground(new java.awt.Color(207, 246, 248));
        elegirDestino.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        elegirDestino.setMaximumRowCount(18);
        elegirDestino.setToolTipText("Estación destino");
        elegirDestino.setAutoscrolls(true);
        elegirDestino.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        elegirDestino.setFocusable(false);

        btnIntercambio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/flechas.png"))); // NOI18N
        btnIntercambio.setToolTipText("Intercambiar origen-destino");
        btnIntercambio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIntercambioActionPerformed(evt);
            }
        });

        calendario.setToolTipText("Seleccionar fecha");
        calendario.setDateFormatString("dd-MM-yyyy");
        calendario.setMaxSelectableDate(new java.util.Date(1735603274000L));
        calendario.setMinSelectableDate(new java.util.Date(1704067274000L));

        lbError1.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        lbError1.setForeground(new java.awt.Color(255, 0, 0));
        lbError1.setText("Ruta no existente");

        btnCancelar.setBackground(new java.awt.Color(94, 145, 136));
        btnCancelar.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout info1Layout = new javax.swing.GroupLayout(info1);
        info1.setLayout(info1Layout);
        info1Layout.setHorizontalGroup(
            info1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, info1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSig1)
                .addGap(100, 100, 100))
            .addGroup(info1Layout.createSequentialGroup()
                .addGroup(info1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(info1Layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addGroup(info1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(subtitulo1)
                            .addComponent(lbError1)
                            .addComponent(titulo1)))
                    .addGroup(info1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(info1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(calendario, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, info1Layout.createSequentialGroup()
                                .addGroup(info1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(elegirDestino, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(elegirOrigen, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnIntercambio))
                            .addComponent(btnCancelar, javax.swing.GroupLayout.Alignment.LEADING))))
                .addContainerGap(341, Short.MAX_VALUE))
        );
        info1Layout.setVerticalGroup(
            info1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(info1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titulo1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(subtitulo1)
                .addGroup(info1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(info1Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(elegirOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(elegirDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, info1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnIntercambio)
                        .addGap(61, 61, 61)))
                .addComponent(calendario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(lbError1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 230, Short.MAX_VALUE)
                .addGroup(info1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSig1)
                    .addComponent(btnCancelar))
                .addGap(75, 75, 75))
        );

        getContentPane().add(info1);

        info2.setBackground(new java.awt.Color(207, 246, 248));
        info2.setPreferredSize(new java.awt.Dimension(500, 750));

        titulo2.setFont(new java.awt.Font("Stencil", 1, 48)); // NOI18N
        titulo2.setForeground(new java.awt.Color(94, 145, 136));
        titulo2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo2.setText("PASO 2");

        subtitulo2.setFont(new java.awt.Font("Stencil", 1, 18)); // NOI18N
        subtitulo2.setForeground(new java.awt.Color(94, 145, 136));
        subtitulo2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        subtitulo2.setText("tREN");
        subtitulo2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        subtitulo2.setMaximumSize(new java.awt.Dimension(268, 19));
        subtitulo2.setMinimumSize(new java.awt.Dimension(268, 19));
        subtitulo2.setPreferredSize(new java.awt.Dimension(268, 19));

        btnSig2.setBackground(new java.awt.Color(94, 145, 136));
        btnSig2.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        btnSig2.setForeground(new java.awt.Color(255, 255, 255));
        btnSig2.setText("SIGUIENTE >");
        btnSig2.setToolTipText("Siguiente paso");
        btnSig2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSig2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSig2ActionPerformed(evt);
            }
        });

        btnAnt2.setBackground(new java.awt.Color(94, 145, 136));
        btnAnt2.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        btnAnt2.setForeground(new java.awt.Color(255, 255, 255));
        btnAnt2.setText("< ANTERIOR");
        btnAnt2.setToolTipText("Anterior paso");
        btnAnt2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAnt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnt2ActionPerformed(evt);
            }
        });

        ckeckBoxBici.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        ckeckBoxBici.setForeground(new java.awt.Color(94, 145, 136));
        ckeckBoxBici.setText("Bicicleta");
        ckeckBoxBici.setToolTipText("Marcar si se va a llevar bicicleta");
        ckeckBoxBici.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ckeckBoxBici.setMaximumSize(new java.awt.Dimension(598, 516));
        ckeckBoxBici.setMinimumSize(new java.awt.Dimension(598, 516));

        checkBoxSilla.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        checkBoxSilla.setForeground(new java.awt.Color(94, 145, 136));
        checkBoxSilla.setText("Silla de ruedas");
        checkBoxSilla.setToolTipText("Marcar si se va a llevar silla de ruedas");
        checkBoxSilla.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        checkBoxMascota.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        checkBoxMascota.setForeground(new java.awt.Color(94, 145, 136));
        checkBoxMascota.setText("Mascota");
        checkBoxMascota.setToolTipText("Marcar si se va a llevar mascota");
        checkBoxMascota.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        lbEquipaje.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        lbEquipaje.setForeground(new java.awt.Color(94, 145, 136));
        lbEquipaje.setText("Equipaje especial:");

        lbBicicleta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bicicleta.png"))); // NOI18N
        lbBicicleta.setToolTipText("");

        lbMascota.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/mascota.png"))); // NOI18N

        lbSilla.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/silla.png"))); // NOI18N

        lista_rutas_posibles.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        lista_rutas_posibles.setToolTipText("Seleccionar tren");
        lista_rutas_posibles.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lista_rutas_posibles.setPreferredSize(new java.awt.Dimension(400, 200));
        jScrollPane1.setViewportView(lista_rutas_posibles);

        lbError2.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        lbError2.setForeground(new java.awt.Color(255, 0, 0));
        lbError2.setText("Debe seleccionar un billete");

        javax.swing.GroupLayout info2Layout = new javax.swing.GroupLayout(info2);
        info2.setLayout(info2Layout);
        info2Layout.setHorizontalGroup(
            info2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(info2Layout.createSequentialGroup()
                .addGroup(info2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(info2Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(info2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(info2Layout.createSequentialGroup()
                                .addComponent(lbMascota)
                                .addGap(10, 10, 10)
                                .addGroup(info2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkBoxSilla)
                                    .addComponent(checkBoxMascota)))
                            .addGroup(info2Layout.createSequentialGroup()
                                .addComponent(lbBicicleta)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ckeckBoxBici, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lbSilla)
                            .addComponent(lbEquipaje)))
                    .addGroup(info2Layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addGroup(info2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(titulo2)
                            .addComponent(subtitulo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(info2Layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(lbError2))
                    .addGroup(info2Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(info2Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(btnAnt2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSig2)
                .addGap(100, 100, 100))
        );
        info2Layout.setVerticalGroup(
            info2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(info2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titulo2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(subtitulo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(lbEquipaje)
                .addGap(10, 10, 10)
                .addGroup(info2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(ckeckBoxBici, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbBicicleta))
                .addGap(0, 0, 0)
                .addGroup(info2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(checkBoxSilla)
                    .addComponent(lbSilla))
                .addGap(0, 0, 0)
                .addGroup(info2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(checkBoxMascota)
                    .addComponent(lbMascota))
                .addGap(45, 45, 45)
                .addComponent(lbError2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(info2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSig2)
                    .addComponent(btnAnt2))
                .addGap(75, 75, 75))
        );

        getContentPane().add(info2);

        info3.setBackground(new java.awt.Color(181, 236, 242));
        info3.setPreferredSize(new java.awt.Dimension(500, 750));

        titulo3.setFont(new java.awt.Font("Stencil", 1, 48)); // NOI18N
        titulo3.setForeground(new java.awt.Color(94, 145, 136));
        titulo3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo3.setText("PASO 3");

        subtitulo3.setFont(new java.awt.Font("Stencil", 1, 18)); // NOI18N
        subtitulo3.setForeground(new java.awt.Color(94, 145, 136));
        subtitulo3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        subtitulo3.setText("PAGO");
        subtitulo3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        btnAnt3.setBackground(new java.awt.Color(94, 145, 136));
        btnAnt3.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        btnAnt3.setForeground(new java.awt.Color(255, 255, 255));
        btnAnt3.setText("< ANTERIOR");
        btnAnt3.setToolTipText("Anterior paso");
        btnAnt3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAnt3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnt3ActionPerformed(evt);
            }
        });

        radioBtnCredito.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        radioBtnCredito.setForeground(new java.awt.Color(94, 145, 136));
        radioBtnCredito.setText("Tarjeta de crédito");
        radioBtnCredito.setToolTipText("Seleccionar método de pago");
        radioBtnCredito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtnCreditoActionPerformed(evt);
            }
        });

        radioBtnRenfe.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        radioBtnRenfe.setForeground(new java.awt.Color(94, 145, 136));
        radioBtnRenfe.setText("Tarjeta de Usuario TCyL");
        radioBtnRenfe.setToolTipText("Seleccionar método de pago");
        radioBtnRenfe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtnRenfeActionPerformed(evt);
            }
        });

        lbTarjetaCredito.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/tarjeta_credito.jpg"))); // NOI18N
        lbTarjetaCredito.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbTarjetaCreditoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbTarjetaCreditoMouseExited(evt);
            }
        });

        lbTarjetaRenfe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/tarjeta_renfe.jpg"))); // NOI18N
        lbTarjetaRenfe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbTarjetaRenfeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbTarjetaRenfeMouseExited(evt);
            }
        });

        lbInfoTarjeta1.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        lbInfoTarjeta1.setForeground(new java.awt.Color(94, 145, 136));
        lbInfoTarjeta1.setText("Mantenga la tarjeta AQUÍ 2 segundos");

        pin.setToolTipText("Inserte el PIN");

        btnPIN.setText("ACEPTAR");
        btnPIN.setToolTipText("Aceptar");
        btnPIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPINActionPerformed(evt);
            }
        });

        lbInfoTarjeta2.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        lbInfoTarjeta2.setForeground(new java.awt.Color(94, 145, 136));
        lbInfoTarjeta2.setText("Mantenga la tarjeta AQUÍ 2 segundos");

        lbPIN.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        lbPIN.setForeground(new java.awt.Color(94, 145, 136));
        lbPIN.setText("PIN:");

        lbError3.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        lbError3.setForeground(new java.awt.Color(255, 0, 0));
        lbError3.setText("Error al procesar el pago");

        javax.swing.GroupLayout info3Layout = new javax.swing.GroupLayout(info3);
        info3.setLayout(info3Layout);
        info3Layout.setHorizontalGroup(
            info3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(info3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(info3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lbTarjetaCredito)
                    .addComponent(lbInfoTarjeta1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(info3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lbInfoTarjeta2)
                    .addComponent(lbTarjetaRenfe))
                .addGap(40, 40, 40))
            .addGroup(info3Layout.createSequentialGroup()
                .addGroup(info3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(info3Layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addGroup(info3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(titulo3)
                            .addComponent(subtitulo3)))
                    .addGroup(info3Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(lbPIN)
                        .addGap(10, 10, 10)
                        .addComponent(pin, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(btnPIN))
                    .addGroup(info3Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(btnAnt3))
                    .addGroup(info3Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addGroup(info3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioBtnRenfe)
                            .addComponent(radioBtnCredito)))
                    .addGroup(info3Layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(lbError3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        info3Layout.setVerticalGroup(
            info3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(info3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titulo3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(subtitulo3)
                .addGap(29, 29, 29)
                .addComponent(radioBtnCredito)
                .addGap(18, 18, 18)
                .addComponent(radioBtnRenfe)
                .addGap(50, 50, 50)
                .addGroup(info3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbTarjetaRenfe)
                    .addComponent(lbTarjetaCredito))
                .addGap(10, 10, 10)
                .addGroup(info3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbInfoTarjeta2)
                    .addComponent(lbInfoTarjeta1))
                .addGap(10, 10, 10)
                .addGroup(info3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lbPIN)
                    .addComponent(pin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPIN))
                .addGap(38, 38, 38)
                .addComponent(lbError3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 149, Short.MAX_VALUE)
                .addComponent(btnAnt3)
                .addGap(75, 75, 75))
        );

        getContentPane().add(info3);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    
    
    
    //MÉTODOS PRIVADOS*****************************************************************************************************************
    /**
     * Oculta los pasos indicados como argumentos
     * Se ocultarán aquellos pasos con valor 1 en los parámetros
     * @param uno un número entero que valdrá 1 para ocultar el paso 1
     * @param dos un número entero que valdrá 2 para ocultar el paso 2
     * @param tres un número entero que valdrá 3 para ocultar el paso 3
     */
    public void setNoVisible(int uno, int dos, int tres){        
        Component[] componentesuno;
        Component[] componentesdos;
        Component[] componentestres;
        
        if(uno == 1){
            componentesuno = info1.getComponents();
            for(Component comp : componentesuno){
                    comp.setVisible(false);
            } 
        }
        
        if(dos == 1){
            componentesdos = info2.getComponents();
            for(Component comp : componentesdos){
                    comp.setVisible(false);
            } 
        }
        
        if(tres == 1){
            componentestres = info3.getComponents();
            for(Component comp : componentestres){
                comp.setVisible(false);
            } 
        }   
    }
    
    /**
     * Muestra los pasos indicados como argumentos
     * Se mostrarán aquellos pasos con valor 1 en los parámetros
     * @param uno un número entero que valdrá 1 para mostrar el paso 1
     * @param dos un número entero que valdrá 2 para mostrar el paso 2
     * @param tres un número entero que valdrá 3 para mostrar el paso 3
     */
    public void setVisible(int uno, int dos, int tres){        
        Component[] componentesuno;
        Component[] componentesdos;
        
        if(uno == 1){
            componentesuno = info1.getComponents();
            for(Component comp : componentesuno){
                    comp.setVisible(true);
            }
        }
        
        if(dos == 1){
            componentesdos = info2.getComponents();
            for(Component comp : componentesdos){
                    comp.setVisible(true);
            } 
        }
        
        if(tres == 1){
            titulo3.setVisible(true);
            subtitulo3.setVisible(true);
            btnAnt3.setVisible(true);
            radioBtnRenfe.setVisible(true);
            radioBtnCredito.setVisible(true);
        }
        
        resetErrores();
    }
    
    /**
     * Resetea todos los elementos al estado inicial
     */
    public void resetTodo(){
        cargarEstaciones();
        calendario.setDate(null);
        resetErrores();
        lista_rutas_posibles.removeAll();
        ckeckBoxBici.setSelected(false);
        checkBoxSilla.setSelected(false);
        checkBoxMascota.setSelected(false);
        radioBtnCredito.setSelected(false);
        radioBtnRenfe.setSelected(false);
        pin.setText("");
        miControlador.resetTodo();
    }
    
    /**
     * Almacena en los JCombobox de origen y destino las posibles estaciones 
     */
    public void cargarEstaciones(){
        ArrayList<String> aux = new ArrayList<>();
        
        elegirOrigen.removeAllItems();
        elegirDestino.removeAllItems();
        aux = miControlador.cargarEstaciones();
        
        for (String item : aux) {
            elegirOrigen.addItem(item);
            elegirDestino.addItem(item);
        }   
    }
    
    /**
     * Almacena en el JList de rutas posibles los datos de dichas rutas
     * @param origen la estación de origen
     * @param destino la estación de destino
     * @param findesemana un booleano que indique si la fecha es un fin de semana
     */
    public void cargarRutasPosibles(String origen, String destino, boolean findesemana){
        ArrayList<String> aux = new ArrayList<>();
        
        lista_rutas_posibles.removeAll();
        aux = miControlador.cargarRutasPosibles(getOrigen(), getDestino(), getFinDeSemana());
        String[] add = new String[aux.size()];
        for(int i = 0; i < add.length; i++){
            add[i] = aux.get(i);
        }
        
        lista_rutas_posibles.setListData(add);
    }
    
    /**
     * Elimina la visibilidad de las etiquetas de error
     */
    public void resetErrores(){
        lbError1.setVisible(false);
        lbError2.setVisible(false);
        lbError3.setVisible(false);
    }

    
    
    
    
    
    
    //MÉTODOS PÚBLICOS*****************************************************************************************************************
    /**
     * Consulta la estación de origen
     * @return la estación de origen
     */
    public String getOrigen(){
        return (String)elegirOrigen.getSelectedItem();
    }
    
    /**
     * Consulta la estación de destino
     * @return la estación de destino
     */
    public String getDestino(){
        return (String)elegirDestino.getSelectedItem();
    }
    
    public boolean getBicicleta(){
        return ckeckBoxBici.isSelected();
    }
    
    public boolean getMascota(){
        return checkBoxMascota.isSelected();
    }
     
    public boolean getSilla(){
        return checkBoxSilla.isSelected();
    }
    
    
    /**
     * Consulta la fecha seleccionada por el usuario
     * @return una fecha en formato dd-MM-yyyy
     */
    public String getFecha(){
        SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy");  
        
        if(calendario.getDate() != null){
            return formato.format(calendario.getDate());
        }
        
        return null;
    }
    
      /**
     * Consulta la fecha seleccionada por el usuario
     * @return una fecha en formato date
     */
    public Date getDate(){
        if(calendario.getDate() != null){
            return calendario.getDate();
        }
        
        return null;
    }
    
    /**
     * Consulta si la fecha seleccionada por el usuario cae en fin de semana
     * @return true si es un fin de semana y false en caso contrario
     */
    public boolean getFinDeSemana(){
        Date fecha = calendario.getDate();
        LocalDate localFecha = fecha.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        DayOfWeek dia = localFecha.getDayOfWeek();
        
        if(dia == DayOfWeek.SATURDAY || dia == DayOfWeek.SUNDAY){
            return true;
        }
        else{
            return false;
        }
    }
    
    /**
     * Consulta el precio del billete seleccionado por el usuario
     * @return un número mayor o igual a cero
     */
    public double getPrecio(){
        String elem = lista_rutas_posibles.getSelectedValue();
        String[] token = elem.split(" ");
        return parseDouble(token[token.length - 2]);
    }
    
    
    
    public void setVisibilidadLbError1(boolean valor){
        lbError1.setVisible(valor);
    }
    
    public void setTextoLbError1(String valor){
        lbError1.setText(valor);
    }
    
    public void setVisibilidadLbError3(boolean valor){
        lbError2.setVisible(valor);
    }
    
    public void setTextoLbError3(String valor){
        lbError3.setText(valor);
    }
    
    public void setVisibilidadLbError4(boolean valor){
        lbError3.setVisible(valor);
    }
    
    public void setTextoLbError4(String valor){
        lbError3.setText(valor);
    }
    
    public void setVisibilidadLbTarjetaRenfe(boolean valor){
        lbTarjetaRenfe.setVisible(valor);
    }
    
    public void setVisibilidadLbMantenerRenfe(boolean valor){
        lbInfoTarjeta2.setVisible(valor);
    }
    
    public void setVisibilidadLbTarjetaCredito(boolean valor){
        lbTarjetaCredito.setVisible(valor);
    }
    
    public void setVisibilidadLbMantenerCredito(boolean valor){
        lbInfoTarjeta1.setVisible(valor);
    }
    
    public void setVisibilidadLbPin(boolean valor){
        lbPIN.setVisible(valor);
    }
    
    public void setVisibilidadPin(boolean valor){
        pin.setVisible(valor);
    }
    
    public void setVisibilidadButtonPin(boolean valor){
        btnPIN.setVisible(valor);
    }
    
    public boolean isListaRutasPosiblesSelected(){
        return !(lista_rutas_posibles.isSelectionEmpty());
    }
    
    public int getListaRutasPosiblesIndex(){
        return lista_rutas_posibles.getSelectedIndex();
    }
    
    public String getListaRutasPosiblesString(){
        return lista_rutas_posibles.getSelectedValue();
    }
    
    public void setRadioButtonRenfe(boolean valor){
        radioBtnRenfe.setSelected(valor);
    }
    
    public void setRadioButtonCredito(boolean valor){
        radioBtnCredito.setSelected(valor);
    }
    
    public boolean getRadioButtonCredito(){
        return radioBtnCredito.isSelected();
    }
    
    public boolean getRadioButtonRenfe(){
        return radioBtnRenfe.isSelected();
    }
    
    public int getIndexOrigen(){
        return elegirOrigen.getSelectedIndex();
    }
    
    public int getIndexDestino(){
        return elegirDestino.getSelectedIndex();
    }
    
    public void setIndexDestino(int valor){
        elegirDestino.setSelectedIndex(valor);
    }
    
    public void setIndexOrigen(int valor){
        elegirOrigen.setSelectedIndex(valor);
    }
    
    public void setVisibilidadPagoCorrecto(boolean valor){
        pago_correcto.setVisible(valor);
    }
    
    public void setPinText(String valor){
        pin.setText(valor);
    }
    
    public void disponerPagoCorrecto(){
        pago_correcto.setVisible(false);
        pago_correcto.dispose();
    }
    
    public void empezarTimerRenfe(){
         timer_tarjeta_renfe.start();
    }
    
    public void pararTimerRenfe(){
         timer_tarjeta_renfe.stop();
    }
    
    //EVENTOS***************************************************************************************************************************
    
    /**
     * Evento al pulsar el botón de siguiente del primer paso
     */
    private void btnSig1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSig1ActionPerformed
        miControlador.procesarBtnSigP1ActionPerformed();
    }//GEN-LAST:event_btnSig1ActionPerformed

    /**
     * Evento al pulsar el botón de siguiente del segundo paso
     */
    private void btnSig2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSig2ActionPerformed
        miControlador.procesarBtnSigP2ActionPerformed();
    }//GEN-LAST:event_btnSig2ActionPerformed
    
    /**
     * Evento al pulsar el botón de anterior del segundo paso
     */
    private void btnAnt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnt2ActionPerformed
        miControlador.procesarBtnAntP2ActionPerformed();
    }//GEN-LAST:event_btnAnt2ActionPerformed

    /**
     * Evento al seleccionar la opción de pago con tarjeta de usuario TCyL
     */
    private void radioBtnRenfeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtnRenfeActionPerformed
        miControlador.procesarRadioBtnRenfeActionPerformed();
    }//GEN-LAST:event_radioBtnRenfeActionPerformed

    /**
     * Evento al seleccionar la opción de pago con tarjeta de crédito
     */
    private void radioBtnCreditoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtnCreditoActionPerformed
        miControlador.procesarRadioBtnCreditoActionPerformed();
    }//GEN-LAST:event_radioBtnCreditoActionPerformed

    /**
     * Evento al pulsar el botón de anterior del tercer paso
     */
    private void btnAnt3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnt3ActionPerformed
        miControlador.procesarBtnAntP3ActionPerformed();
    }//GEN-LAST:event_btnAnt3ActionPerformed

    /**
     * Evento al pulsar el botón de intercambio de estaciones
     */
    private void btnIntercambioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIntercambioActionPerformed
        miControlador.procesarBtnIntercambioActionPerformed();
    }//GEN-LAST:event_btnIntercambioActionPerformed

    /**
     * Evento al pulsar el botón de aceptar el PIN
     */
    private void btnPINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPINActionPerformed
       miControlador.procesarBtnPinActionPerformed();
    }//GEN-LAST:event_btnPINActionPerformed
    
    /**
     * Evento al introducir el ratón sobre la tarjeta de crédito
     */
    private void lbTarjetaCreditoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbTarjetaCreditoMouseEntered
        timer_tarjeta_credito.start();
    }//GEN-LAST:event_lbTarjetaCreditoMouseEntered

    /**
     * Evento al sacar el ratón de la tarjeta de crédito
     */
    private void lbTarjetaCreditoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbTarjetaCreditoMouseExited
        timer_tarjeta_credito.stop();
    }//GEN-LAST:event_lbTarjetaCreditoMouseExited

    /**
     * Evento al introducir el ratón sobre la tarjeta de usuario de TCyL
     */
    private void lbTarjetaRenfeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbTarjetaRenfeMouseEntered
        miControlador.procesarLbTarjetaRenfeMouseEntered();
    }//GEN-LAST:event_lbTarjetaRenfeMouseEntered

    /**
     * Evento al sacar el ratón de la tarjeta de usuario de TCyL
     */
    private void lbTarjetaRenfeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbTarjetaRenfeMouseExited
        miControlador.procesarLbTarjetaRenfeMouseExited();
    }//GEN-LAST:event_lbTarjetaRenfeMouseExited

    /**
     * Evento al pulsar el botón de comprar nuevo billete
     */
    private void btn_billeteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_billeteActionPerformed
        miControlador.procesarBtnBilleteActionPerformed();
    }//GEN-LAST:event_btn_billeteActionPerformed

    /**
     * Evento al pulsar el botón de salir
     */
    private void btn_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salirActionPerformed
        miControlador.procesarBtnSalirActionPerformed();
    }//GEN-LAST:event_btn_salirActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        miControlador.procesarCancelar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    
    
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnt2;
    private javax.swing.JButton btnAnt3;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnIntercambio;
    private javax.swing.JButton btnPIN;
    private javax.swing.JButton btnSig1;
    private javax.swing.JButton btnSig2;
    private javax.swing.JButton btn_billete;
    private javax.swing.JButton btn_salir;
    private com.toedter.calendar.JDateChooser calendario;
    private javax.swing.JCheckBox checkBoxMascota;
    private javax.swing.JCheckBox checkBoxSilla;
    private javax.swing.JCheckBox ckeckBoxBici;
    private javax.swing.JComboBox<String> elegirDestino;
    private javax.swing.JComboBox<String> elegirOrigen;
    private javax.swing.JPanel info1;
    private javax.swing.JPanel info2;
    private javax.swing.JPanel info3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbBicicleta;
    private javax.swing.JLabel lbEquipaje;
    private javax.swing.JLabel lbError1;
    private javax.swing.JLabel lbError2;
    private javax.swing.JLabel lbError3;
    private javax.swing.JLabel lbInfoTarjeta1;
    private javax.swing.JLabel lbInfoTarjeta2;
    private javax.swing.JLabel lbMascota;
    private javax.swing.JLabel lbPIN;
    private javax.swing.JLabel lbSilla;
    private javax.swing.JLabel lbTarjetaCredito;
    private javax.swing.JLabel lbTarjetaRenfe;
    private javax.swing.JLabel lb_pago_aceptado;
    private javax.swing.JList<String> lista_rutas_posibles;
    private javax.swing.JDialog pago_correcto;
    private javax.swing.JPasswordField pin;
    private javax.swing.JRadioButton radioBtnCredito;
    private javax.swing.JRadioButton radioBtnRenfe;
    private javax.swing.JLabel subtitulo1;
    private javax.swing.JLabel subtitulo2;
    private javax.swing.JLabel subtitulo3;
    private javax.swing.JLabel titulo1;
    private javax.swing.JLabel titulo2;
    private javax.swing.JLabel titulo3;
    // End of variables declaration//GEN-END:variables
}
